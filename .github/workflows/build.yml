name: Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:

  build-macos:
    runs-on: macos-latest
    
    env:
      CGO_ENABLED: 1
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Install system dependencies
      run: |
        brew install portaudio pkg-config
    
    - name: Get version
      id: get_version
      run: |
        VERSION=$(go run scripts/get-version.go)
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Build macOS Apple Silicon
      run: |
        mkdir -p build/dist
        VERSION="${{ steps.get_version.outputs.VERSION }}"
        CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X main.version=$VERSION" -o build/dist/koemoji-go-darwin-arm64 ./cmd/koemoji-go
    
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: koemoji-go-macos-binaries
        path: |
          build/dist/koemoji-go-darwin-arm64

  build-windows:
    runs-on: windows-latest
    
    env:
      CGO_ENABLED: 1
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Setup Windows build environment
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >-
          git
          mingw-w64-ucrt-x86_64-gcc
          mingw-w64-ucrt-x86_64-pkg-config
          mingw-w64-ucrt-x86_64-portaudio
    
    - name: Get version
      id: get_version
      run: |
        $version = go run scripts/get-version.go
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
      shell: pwsh
    
    - name: Update version info
      run: |
        # PowerShell でバージョン情報を更新
        $version = "${{ steps.get_version.outputs.VERSION }}"
        $versionParts = $version.Split('.')
        $major = $versionParts[0]
        $minor = $versionParts[1]
        $patch = $versionParts[2]
        
        # versioninfo.json を更新
        $versionInfo = Get-Content build/common/templates/windows/versioninfo.json | ConvertFrom-Json
        $versionInfo.FixedFileInfo.FileVersion.Major = [int]$major
        $versionInfo.FixedFileInfo.FileVersion.Minor = [int]$minor
        $versionInfo.FixedFileInfo.FileVersion.Patch = [int]$patch
        $versionInfo.FixedFileInfo.ProductVersion.Major = [int]$major
        $versionInfo.FixedFileInfo.ProductVersion.Minor = [int]$minor
        $versionInfo.FixedFileInfo.ProductVersion.Patch = [int]$patch
        $versionInfo.StringFileInfo.ProductVersion = $version
        $versionInfo.StringFileInfo.FileVersion = "$version.0"
        
        $versionInfo | ConvertTo-Json -Depth 10 | Set-Content build/common/templates/windows/versioninfo.json
      shell: pwsh
    
    - name: Build Windows
      shell: msys2 {0}
      run: |
        export CGO_ENABLED=1
        export CC=gcc
        
        # VERSION は GitHub Actions の出力から取得
        VERSION="${{ steps.get_version.outputs.VERSION }}"
        
        # Install goversioninfo in MSYS2 environment
        go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo@latest
        export PATH=$PATH:$(go env GOPATH)/bin
        
        mkdir -p build/dist
        
        cd build
        goversioninfo -o resource_windows_amd64.syso common/templates/windows/versioninfo.json
        cp resource_windows_amd64.syso ../cmd/koemoji-go/
        
        go build -ldflags="-s -w -X main.version=$VERSION" -o dist/koemoji-go.exe ../cmd/koemoji-go
        
        rm -f resource_windows_amd64.syso ../cmd/koemoji-go/resource_windows_amd64.syso
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: koemoji-go-windows-binaries
        path: build/dist/koemoji-go.exe