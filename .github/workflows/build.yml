name: Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:

  build-macos:
    runs-on: macos-latest
    
    env:
      CGO_ENABLED: 1
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Install system dependencies
      run: |
        brew install portaudio pkg-config
    
    - name: Build macOS Intel
      run: |
        mkdir -p build/dist
        CGO_ENABLED=1 GOARCH=amd64 go build -ldflags="-s -w" -o build/dist/koemoji-go-darwin-amd64 ./cmd/koemoji-go
    
    - name: Build macOS Apple Silicon
      run: |
        CGO_ENABLED=1 GOARCH=arm64 go build -ldflags="-s -w" -o build/dist/koemoji-go-darwin-arm64 ./cmd/koemoji-go
    
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: koemoji-go-macos-binaries
        path: |
          build/dist/koemoji-go-darwin-amd64
          build/dist/koemoji-go-darwin-arm64

  build-windows:
    runs-on: windows-latest
    
    env:
      CGO_ENABLED: 1
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Setup Windows build environment
      shell: powershell
      run: |
        # Install MSYS2 and required packages
        choco install msys2 -y
        $env:PATH = "C:\tools\msys64\mingw64\bin;C:\tools\msys64\usr\bin;" + $env:PATH
        # Refresh environment
        refreshenv
        # Install portaudio via MSYS2
        C:\tools\msys64\usr\bin\bash.exe -lc "pacman -S --noconfirm mingw-w64-x86_64-portaudio mingw-w64-x86_64-pkg-config mingw-w64-x86_64-gcc"
        echo "Windows build environment ready"
    
    - name: Install goversioninfo
      run: go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo@latest
    
    - name: Build Windows
      shell: powershell
      run: |
        $env:PATH = "C:\tools\msys64\mingw64\bin;C:\tools\msys64\usr\bin;" + $env:PATH
        $env:CGO_ENABLED = "1"
        $env:CC = "gcc"
        $env:PKG_CONFIG_PATH = "C:\tools\msys64\mingw64\lib\pkgconfig"
        
        mkdir -p build/dist -Force
        
        cd build
        goversioninfo -o resource_windows_amd64.syso versioninfo.json
        Copy-Item resource_windows_amd64.syso ../cmd/koemoji-go/
        
        go build -ldflags="-s -w" -o dist/koemoji-go.exe ../cmd/koemoji-go
        
        Remove-Item resource_windows_amd64.syso, ../cmd/koemoji-go/resource_windows_amd64.syso -ErrorAction SilentlyContinue
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: koemoji-go-windows-binaries
        path: build/dist/koemoji-go.exe